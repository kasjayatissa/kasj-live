"use strict";(self.webpackChunkkasj_live=self.webpackChunkkasj_live||[]).push([[1584],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),c=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(o.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),d=a,f=u["".concat(o,".").concat(d)]||u[d]||m[d]||l;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<l;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8168:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const l={sidebar_position:5},i="Let's Encrypt",s={unversionedId:"homelab-services/letsencrypt",id:"homelab-services/letsencrypt",title:"Let's Encrypt",description:"LetsEncrypt is a nonprofit Certificate Authority that provides free TLS certificates to millions of websites all around the world.",source:"@site/docs/01-homelab-services/05-letsencrypt.md",sourceDirName:"01-homelab-services",slug:"/homelab-services/letsencrypt",permalink:"/kasj-live/docs/homelab-services/letsencrypt",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Cert Manager",permalink:"/kasj-live/docs/homelab-services/certmanager"},next:{title:"Traefik Dashboard",permalink:"/kasj-live/docs/homelab-services/traefikdash"}},o={},c=[{value:"Connect a domain from CloudFlare",id:"connect-a-domain-from-cloudflare",level:2},{value:"Adding Let&#39;s Encrypt as an Issuer to cert-manager",id:"adding-lets-encrypt-as-an-issuer-to-cert-manager",level:2},{value:"Issuing certificates",id:"issuing-certificates",level:2}],p={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"lets-encrypt"},"Let's Encrypt"),(0,a.kt)("p",null,"LetsEncrypt is a nonprofit Certificate Authority that provides free TLS certificates to millions of websites all around the world."),(0,a.kt)("h2",{id:"connect-a-domain-from-cloudflare"},"Connect a domain from CloudFlare"),(0,a.kt)("p",null,"Providing cert-manager my cloudflare token could be done with a simple manifest:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title=secret-cf-token.yaml",title:"secret-cf-token.yaml"},"apiVersion: v1\nkind: Secret\nmetadata:\n  name: cloudflare-token-secret\n  namespace: cert-manager\ntype: Opaque\nstringData:\n  cloudflare-token: <redacted>\n")),(0,a.kt)("p",null,"To apply the manifest run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f secret-cf-token.yaml\n")),(0,a.kt)("h2",{id:"adding-lets-encrypt-as-an-issuer-to-cert-manager"},"Adding Let's Encrypt as an Issuer to cert-manager"),(0,a.kt)("p",null,"I now need to let cert-manager know that I'll be using Let's Encrypt as my certificate issuer of choice through another manifest:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="letsencrypt-production.yaml"',title:'"letsencrypt-production.yaml"'},'apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-production\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: kasunj@gmail.com\n    privateKeySecretRef:\n      name: letsencrypt-production\n    solvers:\n      - dns01:\n          cloudflare:\n            email: kasunj@gmail.com\n            apiTokenSecretRef:\n              name: cloudflare-token-secret\n              key: cloudflare-token\n        selector:\n          dnsZones:\n            - "kasj.live"\n')),(0,a.kt)("p",null,"and execute using:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f letsencrypt-production.yaml\n")),(0,a.kt)("h2",{id:"issuing-certificates"},"Issuing certificates"),(0,a.kt)("p",null,"The certificate is issued with the following manifest:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="local-kasj-live.yaml"',title:'"local-kasj-live.yaml"'},'apiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: local-kasj-live\n  namespace: default\nspec:\n  secretName: local-kasj-live-tls\n  issuerRef:\n    name: letsencrypt-production\n    kind: ClusterIssuer\n  commonName: "*.local.kasj.live"\n  dnsNames:\n  - "local.kasj.live"\n  - "*.local.kasj.live"\n')),(0,a.kt)("p",null,"and execute using:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f local-kasj-live.yaml\n")),(0,a.kt)("p",null,"Issuing  and validating the certificates takes time (20 minutes minimum). To check how things are progressing run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get challenges\n")))}m.isMDXComponent=!0}}]);