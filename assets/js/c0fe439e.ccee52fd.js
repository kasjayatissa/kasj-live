"use strict";(self.webpackChunkkasj_live=self.webpackChunkkasj_live||[]).push([[9354],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(7294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(t),d=s,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||a;return t?r.createElement(f,i(i({ref:n},c),{},{components:t})):r.createElement(f,i({ref:n},c))}));function f(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var a=t.length,i=new Array(a);i[0]=d;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[u]="string"==typeof e?e:s,i[1]=o;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4248:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var r=t(7462),s=(t(7294),t(3905));const a={sidebar_position:7},i="NFS Persistent Volumes Provisioner",o={unversionedId:"homelab-services/nfs",id:"homelab-services/nfs",title:"NFS Persistent Volumes Provisioner",description:"Setting up NFS server and provisioner",source:"@site/docs/01-homelab-services/07-nfs.md",sourceDirName:"01-homelab-services",slug:"/homelab-services/nfs",permalink:"/kasj-live/docs/homelab-services/nfs",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Traefik Dashboard",permalink:"/kasj-live/docs/homelab-services/traefikdash"},next:{title:"Pihole",permalink:"/kasj-live/docs/homelab-services/pihole"}},l={},p=[{value:"Install NFS Server",id:"install-nfs-server",level:2},{value:"Install NFS provisioner",id:"install-nfs-provisioner",level:2},{value:"Testing the provisioner",id:"testing-the-provisioner",level:2}],c={toc:p},u="wrapper";function m(e){let{components:n,...t}=e;return(0,s.kt)(u,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"nfs-persistent-volumes-provisioner"},"NFS Persistent Volumes Provisioner"),(0,s.kt)("p",null,"Setting up NFS server and provisioner"),(0,s.kt)("h2",{id:"install-nfs-server"},"Install NFS Server"),(0,s.kt)("p",null,"Install the NFS server and export ",(0,s.kt)("inlineCode",{parentName:"p"},"/nfs")," which is accessible by the Kubernetes cluster:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"sudo su\napt update && apt -y upgrade\napt install -y nfs-server\nexit\n\nmkdir /nfs\ncat << EOF >> /etc/exports\n/nfs 192.168.86.41(rw,no_subtree_check,no_root_squash)\nEOF\n\nsystemctl enable --now nfs-server\nexportfs -ar\n")),(0,s.kt)("p",null,"If I ever add another node to my cluster I need to ensure that a NFS client package is installed  able to connect to the NFS server but this isn't required as my NFS server is the same as my Kubernetes node:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"apt install -y nfs-common\n")),(0,s.kt)("h2",{id:"install-nfs-provisioner"},"Install NFS provisioner"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"helm repo add nfs-subdir-external-provisioner https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner\n\nhelm install nfs-subdir-external-provisioner nfs-subdir-external-provisioner/nfs-subdir-external-provisioner \\\n  --create-namespace \\\n  --namespace nfs-provisioner \\\n  --set nfs.server=192.168.86.41 \\\n  --set nfs.path=/nfs\n")),(0,s.kt)("h2",{id:"testing-the-provisioner"},"Testing the provisioner"),(0,s.kt)("p",null,"To test the provisioner I run:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get sc\n")),(0,s.kt)("p",null,"And will use following persistent volume claim manifest:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: nfs-test\n  labels:\n    storage.k8s.io/name: nfs\n    storage.k8s.io/part-of: kubernetes-complete-reference\n    storage.k8s.io/created-by: ssbostan\nspec:\n  accessModes:\n    - ReadWriteMany\n  storageClassName: nfs-client\n  resources:\n    requests:\n      storage: 1Gi\n")),(0,s.kt)("p",null,"Things of note here:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"name")," will vary for each volume claim - I will use the convention of ",(0,s.kt)("inlineCode",{parentName:"li"},"<app_name>-pvc")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"labels")," doesn't change for my needs"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"accessModes")," doesn't change for my needs"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"storageClassName")," doesn't change for my needs"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"storage")," will vary for the app but worth noting that the whole specified range is provisioned (not just what you use)")))}m.isMDXComponent=!0}}]);