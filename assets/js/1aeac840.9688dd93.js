"use strict";(self.webpackChunkkasj_live=self.webpackChunkkasj_live||[]).push([[9316],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},b=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),p=c(n),b=l,d=p["".concat(s,".").concat(b)]||p[b]||u[b]||r;return n?a.createElement(d,i(i({ref:t},m),{},{components:n})):a.createElement(d,i({ref:t},m))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=b;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:l,i[1]=o;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},8495:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var a=n(7462),l=(n(7294),n(3905));const r={sidebar_position:2},i="Metallb",o={unversionedId:"homelab-services/metallb",id:"homelab-services/metallb",title:"Metallb",description:"Metallb is the load balancer which I am currently using to expose my homelab services outside my cluster.",source:"@site/docs/01-homelab-services/02-metallb.md",sourceDirName:"01-homelab-services",slug:"/homelab-services/metallb",permalink:"/kasj-live/docs/homelab-services/metallb",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"K3s",permalink:"/kasj-live/docs/homelab-services/k3s"},next:{title:"Traefik",permalink:"/kasj-live/docs/homelab-services/traefik"}},s={},c=[{value:"Installing metallb",id:"installing-metallb",level:2},{value:"Configuring metallb",id:"configuring-metallb",level:2},{value:"Verifying installation",id:"verifying-installation",level:2}],m={toc:c},p="wrapper";function u(e){let{components:t,...n}=e;return(0,l.kt)(p,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"metallb"},"Metallb"),(0,l.kt)("p",null,"Metallb is the load balancer which I am currently using to expose my homelab services outside my cluster."),(0,l.kt)("h2",{id:"installing-metallb"},"Installing metallb"),(0,l.kt)("p",null,"Installing metallb is pretty easy out of the box. You are already provided with manifest to deploy using the ",(0,l.kt)("strong",{parentName:"p"},"kubectl apply")," command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.13.9/config/manifests/metallb-native.yaml\n")),(0,l.kt)("h2",{id:"configuring-metallb"},"Configuring metallb"),(0,l.kt)("p",null,"Once installed, there were some configuration changes that needed to be made. As mentioned earlier, I needed to specify a pool of IP address for metallb to allocate out. I put this into another yaml file:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="/home-lab/cluster-setup/metallb/metallb-ipconfig.yaml"',title:'"/home-lab/cluster-setup/metallb/metallb-ipconfig.yaml"'},"apiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: first-pool\n  namespace: metallb-system\nspec:\n  addresses:\n  - 192.168.86.100-192.168.86.110\n\n---\napiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  name: default\n  namespace: metallb-system\n")),(0,l.kt)("h2",{id:"verifying-installation"},"Verifying installation"),(0,l.kt)("p",null,"Get the pods running in the ",(0,l.kt)("strong",{parentName:"p"},"metallb-system")," namespace"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get pods -n metallb-system\n")),(0,l.kt)("p",null,"Get the ",(0,l.kt)("strong",{parentName:"p"},"ipaddresspool")," resource running in the ",(0,l.kt)("strong",{parentName:"p"},"metallb-system")," namespace"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get ipaddresspool -n metallb-system\n")))}u.isMDXComponent=!0}}]);